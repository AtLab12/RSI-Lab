<definitions targetNamespace="http://server.jaxws.example.org/"
             xmlns:xs="http://www.w3.org/2001/XMLSchema"
             xmlns:tns="http://server.jaxws.example.org/"
             name="PersonService">
<types>
    <xs:schema xmlns:tns="http://server.jaxws.example.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://server.jaxws.example.org/">

    <xs:element name="PersonExistsEx" type="tns:PersonExistsEx"/>

    <xs:element name="PersonNotFoundEx" type="tns:PersonNotFoundEx"/>

    <xs:element name="addPerson" type="tns:addPerson"/>

    <xs:element name="addPersonResponse" type="tns:addPersonResponse"/>

    <xs:element name="countPersons" type="tns:countPersons"/>

    <xs:element name="countPersonsResponse" type="tns:countPersonsResponse"/>

    <xs:element name="deletePerson" type="tns:deletePerson"/>

    <xs:element name="deletePersonResponse" type="tns:deletePersonResponse"/>

    <xs:element name="getAllPersons" type="tns:getAllPersons"/>

    <xs:element name="getAllPersonsResponse" type="tns:getAllPersonsResponse"/>

    <xs:element name="getPerson" type="tns:getPerson"/>

    <xs:element name="getPersonResponse" type="tns:getPersonResponse"/>

    <xs:element name="updatePerson" type="tns:updatePerson"/>

    <xs:element name="updatePersonResponse" type="tns:updatePersonResponse"/>

    <xs:complexType name="deletePerson">
        <xs:sequence>
            <xs:element name="arg0" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="deletePersonResponse">
        <xs:sequence>
            <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PersonNotFoundEx">
        <xs:sequence>
            <xs:element name="message" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="getPerson">
        <xs:sequence>
            <xs:element name="arg0" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="getPersonResponse">
        <xs:sequence>
            <xs:element name="return" type="tns:person" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="person">
        <xs:sequence>
            <xs:element name="age" type="xs:int"/>
            <xs:element name="firstName" type="xs:string" minOccurs="0"/>
            <xs:element name="id" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="countPersons">
        <xs:sequence/>
    </xs:complexType>

    <xs:complexType name="countPersonsResponse">
        <xs:sequence>
            <xs:element name="return" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="getAllPersons">
        <xs:sequence/>
    </xs:complexType>

    <xs:complexType name="getAllPersonsResponse">
        <xs:sequence>
            <xs:element name="return" type="tns:person" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="addPerson">
        <xs:sequence>
            <xs:element name="arg0" type="xs:int"/>
            <xs:element name="arg1" type="xs:string" minOccurs="0"/>
            <xs:element name="arg2" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="addPersonResponse">
        <xs:sequence>
            <xs:element name="return" type="tns:person" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PersonExistsEx">
        <xs:sequence>
            <xs:element name="message" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="updatePerson">
        <xs:sequence>
            <xs:element name="arg0" type="xs:int"/>
            <xs:element name="arg1" type="xs:string" minOccurs="0"/>
            <xs:element name="arg2" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="updatePersonResponse">
        <xs:sequence>
            <xs:element name="return" type="tns:person" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
</types>
</definitions>